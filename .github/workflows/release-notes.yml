name: Generate Release Notes

on:
  push:
    tags:
      - 'v*' # Trigger on version tags

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for creating releases
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for generating release notes
      
      - name: Get tag name
        id: get_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Get previous tag
        id: prev_tag
        run: |
          echo "PREV_TAG=$(git describe --tags --abbrev=0 ${{ steps.get_tag.outputs.TAG_NAME }}^ || echo '')" >> $GITHUB_OUTPUT
      
      - name: Generate release notes
        id: release_notes
        run: |
          if [ -n "${{ steps.prev_tag.outputs.PREV_TAG }}" ]; then
            # If there's a previous tag, generate notes from previous tag to current
            echo "NOTES<<EOF" >> $GITHUB_OUTPUT
            echo "## What's Changed" >> $GITHUB_OUTPUT
            git log --pretty=format:"* %s (%h)" ${{ steps.prev_tag.outputs.PREV_TAG }}..${{ steps.get_tag.outputs.TAG_NAME }} >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            # If this is the first tag, generate notes from the beginning
            echo "NOTES<<EOF" >> $GITHUB_OUTPUT
            echo "## Initial Release" >> $GITHUB_OUTPUT
            git log --pretty=format:"* %s (%h)" ${{ steps.get_tag.outputs.TAG_NAME }} >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.TAG_NAME }}
          name: Release ${{ steps.get_tag.outputs.TAG_NAME }}
          body: ${{ steps.release_notes.outputs.NOTES }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 