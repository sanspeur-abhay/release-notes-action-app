name: Generate Release Notes

on:
  push:
    tags:
      - 'v*' # Trigger on version tags

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for creating releases
      pull-requests: read # Required for reading PRs and their labels
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for generating release notes
      
      - name: Get tag name
        id: get_tag
        run: |
          echo "tag=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"

      - name: Get previous tag
        id: prev_tag
        run: |
          git fetch --tags
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo '')
          echo "tag=$PREV_TAG" >> "$GITHUB_OUTPUT"
      
      - name: Generate release notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Initialize the release notes file
          echo "# What's Changed" > RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md

          # Get merged PRs between tags
          if [ -n "${{ steps.prev_tag.outputs.tag }}" ]; then
            RANGE="${{ steps.prev_tag.outputs.tag }}..${{ steps.get_tag.outputs.tag }}"
          else
            RANGE="${{ steps.get_tag.outputs.tag }}"
          fi

          # Get all PRs merged in this range
          MERGED_PRS=$(gh pr list --search "is:merged merged:>${{ steps.prev_tag.outputs.tag }}" --json number,title,labels,mergeCommit)

          # Initialize sections
          echo "## ✨ Features" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "$MERGED_PRS" | jq -r '.[] | select(.labels[].name == "feature" or .labels[].name == "enhancement") | "* \(.title) (#\(.number))"' >> RELEASE_NOTES.md || true
          echo "" >> RELEASE_NOTES.md

          echo "## 🐛 Bug Fixes" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "$MERGED_PRS" | jq -r '.[] | select(.labels[].name == "bug" or .labels[].name == "bugfix") | "* \(.title) (#\(.number))"' >> RELEASE_NOTES.md || true
          echo "" >> RELEASE_NOTES.md

          echo "## 🔄 Other Changes" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "$MERGED_PRS" | jq -r '.[] | select(all(.labels[].name; . != "feature" and . != "enhancement" and . != "bug" and . != "fix")) | "* \(.title) (#\(.number))"' >> RELEASE_NOTES.md || true

          # If no PRs found, add a note
          if [ ! -s RELEASE_NOTES.md ]; then
            echo "No changes found in this release." >> RELEASE_NOTES.md
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          name: Release ${{ steps.get_tag.outputs.tag }}
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 